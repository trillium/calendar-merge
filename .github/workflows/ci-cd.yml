name: CI/CD Pipeline

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

jobs:
  # Run tests on every push and PR
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm build

  # Deploy to GCP only on main branch after tests pass
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build functions
        run: pnpm build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy handleWebhook function
        run: |
          gcloud functions deploy handleWebhook \
            --gen2 \
            --runtime=nodejs20 \
            --region=${{ env.REGION }} \
            --source=./functions/calendar-sync \
            --entry-point=handleWebhook \
            --trigger-http \
            --allow-unauthenticated \
            --service-account=${{ env.SERVICE_ACCOUNT_EMAIL }} \
            --set-env-vars PROJECT_ID=${{ env.PROJECT_ID }}

      - name: Deploy renewWatches function
        run: |
          gcloud functions deploy renewWatches \
            --gen2 \
            --runtime=nodejs20 \
            --region=${{ env.REGION }} \
            --source=./functions/calendar-sync \
            --entry-point=renewWatches \
            --trigger-http \
            --service-account=${{ env.SERVICE_ACCOUNT_EMAIL }} \
            --set-env-vars PROJECT_ID=${{ env.PROJECT_ID }}

      - name: Deployment summary
        run: |
          echo "âœ… Deployment complete!"
          echo "Region: ${{ env.REGION }}"
          echo "Project: ${{ env.PROJECT_ID }}"
          gcloud functions list --regions=${{ env.REGION }}
